id: TestCymptomPlaybook
name: TestCymptomPlaybook
version: -1
fromversion: 4.5.0
starttaskid: '0'
tasks:
  '0':
    id: '0'
    taskid: '0'
    type: start
    task:
      id: '0'
      version: -1
      name: ''
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '1'
    separatecontext: false
    view: '{"position": {"x": 50, "y": 50}}'
    note: false
    timertriggers: []
    ignoreworker: false
  '1':
    id: 1
    taskid: '1'
    type: regular
    task:
      id: '1'
      version: -1
      name: DeleteContext
      description: ''
      script: DeleteContext
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '2'
    scriptarguments:
      all:
        simple: yes
    separatecontext: false
    view: '{"position": {"x": 50, "y": 200}}'
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
  '2':
    id: 2
    taskid: '2'
    type: regular
    task:
      id: '2'
      version: -1
      name: cymptom-get-mitigations
      description: ''
      script: '|||cymptom-get-mitigations'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '3'
    scriptarguments: {}
    separatecontext: false
    view: '{"position": {"x": 50, "y": 400}}'
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
  '3':
    id: '3'
    taskid: '3'
    type: condition
    task:
      id: '3'
      version: -1
      name: Verify Outputs
      type: condition
      iscommand: false
      description: ''
      brand: ''
    nexttasks:
      yes:
      - '4'
    separatecontext: false
    conditions:
    - label: yes
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: Cymptom.Mitigations.SeverityType
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Cymptom.Mitigations.Name
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Cymptom.Mitigations.AttackVectorsUsedPercentage
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Cymptom.Mitigations.ID
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Cymptom.Mitigations.AttackVectorsCount
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Cymptom.Mitigations.Procedures
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Cymptom.Mitigations.Techniques
            iscontext: true
      - - operator: isNotEmpty
          left:
            value:
              simple: Cymptom.Mitigations.SubTechniques
            iscontext: true
    view: '{"position": {"x": 50, "y": 600}}'
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
  '4':
    id: 4
    taskid: '4'
    type: regular
    task:
      id: '4'
      version: -1
      name: cymptom-get-users-with-cracked-passwords
      description: ''
      script: '|||cymptom-get-users-with-cracked-passwords'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '5'
    scriptarguments: {}
    separatecontext: false
    view: '{"position": {"x": 50, "y": 800}}'
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
  '5':
    id: '5'
    taskid: '5'
    type: condition
    task:
      id: '5'
      version: -1
      name: Verify Outputs
      type: condition
      iscommand: false
      description: ''
      brand: ''
    nexttasks:
      yes:
      - '6'
    separatecontext: false
    conditions:
    - label: yes
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: Cymptom.CrackedUsers.Username
            iscontext: true
    view: '{"position": {"x": 50, "y": 1000}}'
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
  '6':
    id: '6'
    taskid: '6'
    type: title
    task:
      id: '6'
      version: -1
      name: Test Done
      type: title
      iscommand: false
      brand: ''
      description: ''
    separatecontext: false
    view: '{"position": {"x": 50, "y": 1200}}'
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
view: '{"linkLabelsPosition": {}, "paper": {"dimensions": {"height": 200, "width":
  380, "x": 50, "y": 50}}}'
inputs: []
outputs: []
